#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
print_header() {
    echo -e "\n${BLUE}========================================${NC}"
    echo -e "${BLUE}$1${NC}"
    echo -e "${BLUE}========================================${NC}\n"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
print_result() {
    if [ $1 -eq 0 ]; then
        echo -e "${GREEN}‚úì $2 –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ${NC}"
    else
        echo -e "${RED}‚úó $2 –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å${NC}"
        return 1
    fi
}

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
TOTAL_TESTS=0
FAILED_TESTS=0

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
print_header "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
go mod download
go mod tidy
if [ $? -ne 0 ]; then
    echo -e "${RED}–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π${NC}"
    exit 1
fi
echo -e "${GREEN}–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–¥–∞
print_header "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–¥–∞"
UNFORMATTED=$(gofmt -l .)
if [ -n "$UNFORMATTED" ]; then
    echo -e "${RED}–°–ª–µ–¥—É—é—â–∏–µ —Ñ–∞–π–ª—ã –Ω–µ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω—ã:${NC}"
    echo "$UNFORMATTED"
    echo -e "${YELLOW}–ó–∞–ø—É—Å—Ç–∏—Ç–µ 'go fmt ./...' –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è${NC}"
    FAILED_TESTS=$((FAILED_TESTS + 1))
else
    echo -e "${GREEN}‚úì –í—Å–µ —Ñ–∞–π–ª—ã –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ${NC}"
fi
TOTAL_TESTS=$((TOTAL_TESTS + 1))

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å go vet
print_header "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ —Å go vet"
go vet ./...
print_result $? "–ü—Ä–æ–≤–µ—Ä–∫–∏ go vet"
if [ $? -ne 0 ]; then
    FAILED_TESTS=$((FAILED_TESTS + 1))
fi
TOTAL_TESTS=$((TOTAL_TESTS + 1))

# –¢–µ—Å—Ç—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
print_header "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
go test -v ./internal/config/...
print_result $? "–¢–µ—Å—Ç—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
if [ $? -ne 0 ]; then
    FAILED_TESTS=$((FAILED_TESTS + 1))
fi
TOTAL_TESTS=$((TOTAL_TESTS + 1))

# –¢–µ—Å—Ç—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
print_header "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏"
go test -v ./pkg/auth/...
print_result $? "–¢–µ—Å—Ç—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏"
if [ $? -ne 0 ]; then
    FAILED_TESTS=$((FAILED_TESTS + 1))
fi
TOTAL_TESTS=$((TOTAL_TESTS + 1))

# –¢–µ—Å—Ç—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
print_header "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
go test -v ./pkg/database/...
print_result $? "–¢–µ—Å—Ç—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
if [ $? -ne 0 ]; then
    FAILED_TESTS=$((FAILED_TESTS + 1))
fi
TOTAL_TESTS=$((TOTAL_TESTS + 1))

# –¢–µ—Å—Ç—ã —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤
print_header "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤"
go test -v ./internal/repository/...
print_result $? "–¢–µ—Å—Ç—ã —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤"
if [ $? -ne 0 ]; then
    FAILED_TESTS=$((FAILED_TESTS + 1))
fi
TOTAL_TESTS=$((TOTAL_TESTS + 1))

# –¢–µ—Å—Ç—ã —Å–µ—Ä–≤–∏—Å–æ–≤
print_header "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤"
go test -v ./internal/service/...
print_result $? "–¢–µ—Å—Ç—ã —Å–µ—Ä–≤–∏—Å–æ–≤"
if [ $? -ne 0 ]; then
    FAILED_TESTS=$((FAILED_TESTS + 1))
fi
TOTAL_TESTS=$((TOTAL_TESTS + 1))

# –¢–µ—Å—Ç—ã —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤
print_header "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤"
go test -v ./internal/api/handlers/...
print_result $? "–¢–µ—Å—Ç—ã —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤"
if [ $? -ne 0 ]; then
    FAILED_TESTS=$((FAILED_TESTS + 1))
fi
TOTAL_TESTS=$((TOTAL_TESTS + 1))

# –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã
print_header "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã"
go test -v -run TestIntegration ./...
print_result $? "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã"
if [ $? -ne 0 ]; then
    FAILED_TESTS=$((FAILED_TESTS + 1))
fi
TOTAL_TESTS=$((TOTAL_TESTS + 1))

# –¢–µ—Å—Ç—ã —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º –∫–æ–¥–∞
print_header "–ê–Ω–∞–ª–∏–∑ –ø–æ–∫—Ä—ã—Ç–∏—è –∫–æ–¥–∞"
go test -race -coverprofile=coverage.out ./...
if [ $? -eq 0 ]; then
    go tool cover -html=coverage.out -o coverage.html
    COVERAGE=$(go tool cover -func=coverage.out | grep total | awk '{print $3}')
    echo -e "${GREEN}‚úì –ü–æ–∫—Ä—ã—Ç–∏–µ –∫–æ–¥–∞: $COVERAGE${NC}"
    echo -e "${BLUE}–û—Ç—á–µ—Ç –æ –ø–æ–∫—Ä—ã—Ç–∏–∏ —Å–æ–∑–¥–∞–Ω: coverage.html${NC}"
else
    echo -e "${RED}‚úó –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –ø–æ–∫—Ä—ã—Ç–∏—è –∫–æ–¥–∞${NC}"
    FAILED_TESTS=$((FAILED_TESTS + 1))
fi
TOTAL_TESTS=$((TOTAL_TESTS + 1))

# –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
print_header "–ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç"
PASSED_TESTS=$((TOTAL_TESTS - FAILED_TESTS))

echo -e "–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö –Ω–∞–±–æ—Ä–æ–≤: ${BLUE}$TOTAL_TESTS${NC}"
echo -e "–ü—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ: ${GREEN}$PASSED_TESTS${NC}"
echo -e "–ü—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å: ${RED}$FAILED_TESTS${NC}"

if [ $FAILED_TESTS -eq 0 ]; then
    echo -e "\n${GREEN}üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!${NC}"
    exit 0
else
    echo -e "\n${RED}‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—ã–≤–æ–¥ –≤—ã—à–µ.${NC}"
    exit 1
fi 